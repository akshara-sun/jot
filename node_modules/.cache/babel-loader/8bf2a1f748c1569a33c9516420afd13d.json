{"ast":null,"code":"import _slicedToArray from \"/Users/aksharasun/Documents/Github/Projects/jot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/aksharasun/Documents/Github/Projects/jot/src/components/stickies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Sticky(props) {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    handleTextChange = _useState2[1];\n  var _useState3 = useState(\"flex\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isVisible = _useState4[0],\n    setVisibility = _useState4[1];\n  var nodeRef = React.useRef(null);\n  var toggleVisibility = function toggleVisibility() {\n    if (window.confirm(\"Are you sure you want to delete this note? This action cannot be undone.\")) {\n      setVisibility(\"none\");\n      localStorage.removeItem(\"inputValue\");\n    }\n  };\n  var handleChange = function handleChange(e) {\n    handleTextChange(e.target.value);\n    localStorage.setItem(\"inputValue\", e.target.value);\n  };\n  useEffect(function () {\n    handleTextChange(localStorage.getItem(\"inputValue\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      nodeRef: nodeRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: nodeRef,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            display: isVisible\n          },\n          className: \"sticky\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: function onClick() {\n                  return toggleVisibility();\n                },\n                id: \"close-button\",\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sticky-note\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"sticky-text\",\n                placeholder: \"Enter text here...\",\n                defaultValue: text,\n                style: {\n                  fontFamily: \"Gloria Hallelujah, cursive\"\n                },\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Sticky, \"2JRfWwSDFIG4pERWPKiabjRLEdY=\");\n_c = Sticky;\nvar _c;\n$RefreshReg$(_c, \"Sticky\");","map":{"version":3,"names":["React","useState","useEffect","Draggable","Sticky","props","text","handleTextChange","isVisible","setVisibility","nodeRef","useRef","toggleVisibility","window","confirm","localStorage","removeItem","handleChange","e","target","value","setItem","getItem","display","fontFamily"],"sources":["/Users/aksharasun/Documents/Github/Projects/jot/src/components/stickies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function Sticky(props) {\n  const [text, handleTextChange] = useState(\"\");\n  const [isVisible, setVisibility] = useState(\"flex\");\n  const nodeRef = React.useRef(null);\n\n  const toggleVisibility = () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this note? This action cannot be undone.\"\n      )\n    ) {\n      setVisibility(\"none\");\n      localStorage.removeItem(\"inputValue\");\n    }\n  };\n\n  const handleChange = (e) => {\n    handleTextChange(e.target.value);\n    localStorage.setItem(\"inputValue\", e.target.value);\n  };\n\n  useEffect(() => {\n    handleTextChange(localStorage.getItem(\"inputValue\"));\n  }, []);\n\n  return (\n    <>\n      <Draggable nodeRef={nodeRef}>\n        <div ref={nodeRef}>\n          <ul style={{ display: isVisible }} className=\"sticky\">\n            <li>\n              <div className=\"button-container\">\n                <button onClick={() => toggleVisibility()} id=\"close-button\">\n                  x\n                </button>\n              </div>\n              <p className=\"sticky-note\">\n                <textarea\n                  id=\"sticky-text\"\n                  placeholder=\"Enter text here...\"\n                  defaultValue={text}\n                  style={{ fontFamily: \"Gloria Hallelujah, cursive\" }}\n                  onChange={handleChange}\n                ></textarea>\n              </p>\n            </li>\n          </ul>\n        </div>\n      </Draggable>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,iBAAiB;AAAC;AAAA;AAExC,eAAe,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACpC,gBAAiCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAtCK,IAAI;IAAEC,gBAAgB;EAC7B,iBAAmCN,QAAQ,CAAC,MAAM,CAAC;IAAA;IAA5CO,SAAS;IAAEC,aAAa;EAC/B,IAAMC,OAAO,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EAElC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC7B,IACEC,MAAM,CAACC,OAAO,CACZ,0EAA0E,CAC3E,EACD;MACAL,aAAa,CAAC,MAAM,CAAC;MACrBM,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACvC;EACF,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,CAAC,EAAK;IAC1BX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpD,CAAC;EAEDlB,SAAS,CAAC,YAAM;IACdK,gBAAgB,CAACQ,YAAY,CAACO,OAAO,CAAC,YAAY,CAAC,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,OAAO,EAAEZ,OAAQ;MAAA,uBAC1B;QAAK,GAAG,EAAEA,OAAQ;QAAA,uBAChB;UAAI,KAAK,EAAE;YAAEa,OAAO,EAAEf;UAAU,CAAE;UAAC,SAAS,EAAC,QAAQ;UAAA,uBACnD;YAAA,wBACE;cAAK,SAAS,EAAC,kBAAkB;cAAA,uBAC/B;gBAAQ,OAAO,EAAE;kBAAA,OAAMI,gBAAgB,EAAE;gBAAA,CAAC;gBAAC,EAAE,EAAC,cAAc;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAEnD;cAAA;cAAA;cAAA;YAAA,QACL,eACN;cAAG,SAAS,EAAC,aAAa;cAAA,uBACxB;gBACE,EAAE,EAAC,aAAa;gBAChB,WAAW,EAAC,oBAAoB;gBAChC,YAAY,EAAEN,IAAK;gBACnB,KAAK,EAAE;kBAAEkB,UAAU,EAAE;gBAA6B,CAAE;gBACpD,QAAQ,EAAEP;cAAa;gBAAA;gBAAA;gBAAA;cAAA;YACb;cAAA;cAAA;cAAA;YAAA,QACV;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACI,iBACX;AAEP;AAAC,GAnDuBb,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}